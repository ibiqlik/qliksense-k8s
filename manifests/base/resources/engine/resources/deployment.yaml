apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: engine
    chart: engine-1.66.39
    heritage: Helm
    qlik.com/default: "true"
    release: engine
  name: engine-default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: engine
      qix-engine: qix-engine
      qlik.com/default: "true"
      qlik.com/engine-type: qliksense
      release: engine
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        prometheus.io/job: engine
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        app: engine
        metricsPort: "9090"
        qix-engine: qix-engine
        qix-engine-version: 12.665.0
        qlik.com/default: "true"
        qlik.com/engine-deployment-name: $(PREFIX)-engine-default
        qlik.com/engine-type: qliksense
        release: engine
        servicePort: "9076"
    spec:
      containers:
      - args:
        - -S
        - BasePathPrefix=/api
        - -S
        - DocumentDirectory=/qlik/apps
        - -S
        - EnableNumericalAbbreviation=0
        - -S
        - EnableQvwRestImport=1
        - -S
        - EnableRestartOnSessionStall=1
        - -S
        - EnableWebSocketIdleManagement=1
        - -S
        - FolderConnectionInterface=0
        - -S
        - ShutdownWait=1
        - -S
        - AcceptEULA=$(ACCEPT_EULA)
        - -S
        - PrometheusServicePort=9090
        - -S
        - DesktopPort=9076
        - -S
        - AuditLogVerbosity=0
        - -S
        - EnableExtServiceLogs=1
        - -S
        - EventBusLogVerbosity=4
        - -S
        - ExternalServicesLogVerbosity=4
        - -S
        - HttpTrafficLogVerbosity=4
        - -S
        - PerformanceLogVerbosity=0
        - -S
        - QixPerformanceLogVerbosity=0
        - -S
        - SSEVerbosity=4
        - -S
        - ScriptLogVerbosity=4
        - -S
        - SessionLogVerbosity=4
        - -S
        - SmartSearchIndexLogVerbosity=3
        - -S
        - SmartSearchQueryLogVerbosity=3
        - -S
        - SystemLogVerbosity=4
        - -S
        - TrafficLogVerbosity=0
        - -S
        - RestServiceRequestNbrOfRetries=5
        - -S
        - Autosave=1
        - -S
        - AutosaveInterval=5
        - -S
        - JWKSServiceUrl=$(KEYS_URI)/v1/keys/qlik.api.internal
        - -S
        - ValidateJsonWebTokens=2
        - -S
        - EnableRenewUserToken=1
        - -S
        - InternalTokenServiceUrl=$(TOKEN_AUTH_URI)/v1
        - -S
        - JWTSignPrivateKeyId=$(TOKEN_AUTH_PRIVATE_KEY_ID)
        - -S
        - JWTSignPrivateKeyPath=/etc/secrets/jwtPrivateKey
        - -S
        - EnableABAC=1
        - -S
        - EnableAccessControlTrace=1
        - -S
        - EnableFilePolling=1
        - -S
        - Gen3=1
        - -S
        - PersistenceMode=2
        - -S
        - SystemRules=/etc/config/rules.yaml
        - -S
        - ConnectivityServiceUrl=$(QIX_DATA_CONNECTION_URI)
        - -S
        - ConnectorGetDataRetryCount=3
        - -S
        - ConnectorGetDataRetryIntervalInSeconds=10
        - -S
        - DataConnectorServiceUrl=$(DCAAS_URI)
        - -S
        - EnableDataConnectivityService=1
        - -S
        - EnableGrpcFileStreamConnector=1
        - -S
        - HostedFileRetryCount=3
        - -S
        - HostedFileRetryIntervalInSeconds=10
        - -S
        - SSEPlugin=GeoOperations,$(GEO_OPERATIONS_URI)
        - -S
        - LicenseCacheTimeoutSeconds=3600
        - -S
        - LicenseServiceUrl=$(LICENSES_URI)
        - -S
        - EnableSpaces=1
        - -S
        - SpacesServiceUrl=$(SPACES_URI)
        - -S
        - EnableEncryptData=1
        - -S
        - EncryptionServiceUrl=$(ENCRYPTION_URI)
        - -S
        - UseEncryptionService=1
        - -S
        - EnableFeatureFlagService=1
        - -S
        - FeatureFlagServiceUrl=$(FEATURE_FLAGS_URI)
        - -S
        - EnableGroupsService=1
        - -S
        - GroupsServiceUrl=$(GROUPS_URI)
        - -S
        - EnableAppExport=1
        - -S
        - EnableDownloadFromTCS=1
        - -S
        - EnableResumableUpload=1
        - -S
        - EnableTempContentService=1
        - -S
        - TempContentServiceUrl=$(TEMPORARY_CONTENTS_URI)
        - -S
        - STANCluster=$(NATS_STREAMING_CLUSTER_ID)
        - -S
        - STANMaxReconnect=60
        - -S
        - STANReconnectWait=2
        - -S
        - STANTimeout=10
        - -S
        - STANUrl=$(NATS_URI)
        - -S
        - STANUseToken=1
        - -S
        - UseEventBus=1
        - -S
        - UseSTAN=1
        - -S
        - PersistUserState=1
        - -S
        - PersistedUserStateTTLSeconds=1800
        - -S
        - RedisConnectTimeoutMs=100
        - -S
        - RedisHost=$(PREFIX)-engine-redis-user-state
        - -S
        - RedisPasswordFile=/etc/secrets/redisUserStatePassword
        - -S
        - RedisPort=6379
        - -S
        - RedisSentinelConnectTimeoutMs=100
        - -S
        - RedisSentinelMasterSet=engine-redis-user-state
        - -S
        - RedisSentinelPasswordFile=/etc/secrets/redisUserStateSentinelPassword
        - -S
        - RedisSentinelPort=26379
        - -S
        - RedisSentinelRetryIntervalMs=100
        - -S
        - RedisSentinelSocketTimeoutMs=100
        - -S
        - RedisSocketTimeoutMs=100
        - -S
        - UseRedis=1
        - -S
        - UseRedisSentinel=1
        - -S
        - EnvironmentName="example"
        - -S
        - RegionName="example"
        - -S
        - SessionTimeoutSec=1200
        env:
        - name: ACCEPT_EULA
          valueFrom:
            configMapKeyRef:
              key: acceptEULA
              name: engine-configs
        - name: KEYS_URI
          valueFrom:
            configMapKeyRef:
              key: keysUri
              name: engine-configs
        - name: TOKEN_AUTH_PRIVATE_KEY_ID
          valueFrom:
            secretKeyRef:
              key: tokenAuthPrivateKeyId
              name: engine-secrets
        - name: TOKEN_AUTH_URI
          valueFrom:
            configMapKeyRef:
              key: tokenAuthUri
              name: engine-configs
        - name: LICENSES_URI
          valueFrom:
            configMapKeyRef:
              key: licensesUri
              name: engine-configs
        - name: SPACES_URI
          valueFrom:
            configMapKeyRef:
              key: spacesUri
              name: engine-configs
        - name: FEATURE_FLAGS_URI
          valueFrom:
            configMapKeyRef:
              key: featureFlagsUri
              name: engine-configs
        - name: GROUPS_URI
          valueFrom:
            configMapKeyRef:
              key: groupsUri
              name: engine-configs
        - name: TEMPORARY_CONTENTS_URI
          valueFrom:
            configMapKeyRef:
              key: temporaryContentsUri
              name: engine-configs
        - name: NATS_URI
          valueFrom:
            configMapKeyRef:
              key: natsUri
              name: engine-configs
        - name: NATS_STREAMING_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: natsStreamingClusterId
              name: engine-configs
        - name: ENCRYPTION_URI
          valueFrom:
            configMapKeyRef:
              key: encryptionUri
              name: engine-configs
        - name: DCAAS_URI
          valueFrom:
            configMapKeyRef:
              key: dcaasUri
              name: engine-configs
        - name: QIX_DATA_CONNECTION_URI
          valueFrom:
            configMapKeyRef:
              key: qixDataConnectionUri
              name: engine-configs
        - name: GEO_OPERATIONS_URI
          valueFrom:
            configMapKeyRef:
              key: geoOperationsUri
              name: engine-configs
        - name: PROMETHEUS_PORT
          value: "9090"
        - name: GRPC_DNS_RESOLVER
          value: native
        image: qliktech-docker.jfrog.io/engine:12.665.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 9076
          timeoutSeconds: 10
        name: main
        ports:
        - containerPort: 9076
        - containerPort: 9090
          name: metrics
        readinessProbe:
          httpGet:
            path: /health
            port: 9076
        resources: {}
        volumeMounts:
        - mountPath: /qlik/apps
          name: apps-storage
        - mountPath: /etc/secrets
          name: secrets
          readOnly: true
        - mountPath: /etc/config
          name: rules-volume
        - mountPath: /home/engine/Qlik/Sense
          name: storagepath
        - mountPath: /tmp
          name: tmpdir
      imagePullSecrets:
      - name: artifactory-docker-secret
      terminationGracePeriodSeconds: 30
      volumes:
      - name: apps-storage
        persistentVolumeClaim:
          claimName: engine
      - name: secrets
        secret:
          items:
          - key: tokenAuthPrivateKey
            path: jwtPrivateKey
          secretName: engine-secrets
      - configMap:
          defaultMode: 493
          name: engine-prestop-hook
          optional: true
        name: engine-prestop-hook
      - configMap:
          name: engine-engine-rules-cm
        name: rules-volume
      - emptyDir: {}
        name: storagepath
      - emptyDir: {}
        name: tmpdir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: engine
    chart: engine-1.66.39
    heritage: Helm
    qlik.com/default: "true"
    release: engine
  name: engine-qlikview-default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: engine
      qix-engine: qix-engine
      qlik.com/default: "true"
      qlik.com/engine-type: qlikview
      release: engine
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        prometheus.io/job: engine-qlikview
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        app: engine
        metricsPort: "9090"
        qix-engine: qix-engine
        qix-engine-version: 12.665.0
        qlik.com/default: "true"
        qlik.com/engine-deployment-name: $(PREFIX)-engine-qlikview-default
        qlik.com/engine-type: qlikview
        release: engine
        servicePort: "9076"
    spec:
      containers:
      - args:
        - -S
        - BasePathPrefix=/api
        - -S
        - DocumentDirectory=/qlik/apps
        - -S
        - EnableNumericalAbbreviation=0
        - -S
        - EnableQvwRestImport=1
        - -S
        - EnableRestartOnSessionStall=1
        - -S
        - EnableWebSocketIdleManagement=1
        - -S
        - FolderConnectionInterface=0
        - -S
        - ShutdownWait=1
        - -S
        - AcceptEULA=$(ACCEPT_EULA)
        - -S
        - PrometheusServicePort=9090
        - -S
        - DesktopPort=9076
        - -S
        - AuditLogVerbosity=0
        - -S
        - EnableExtServiceLogs=1
        - -S
        - EventBusLogVerbosity=4
        - -S
        - ExternalServicesLogVerbosity=4
        - -S
        - HttpTrafficLogVerbosity=4
        - -S
        - PerformanceLogVerbosity=0
        - -S
        - QixPerformanceLogVerbosity=0
        - -S
        - SSEVerbosity=4
        - -S
        - ScriptLogVerbosity=4
        - -S
        - SessionLogVerbosity=4
        - -S
        - SmartSearchIndexLogVerbosity=3
        - -S
        - SmartSearchQueryLogVerbosity=3
        - -S
        - SystemLogVerbosity=4
        - -S
        - TrafficLogVerbosity=0
        - -S
        - RestServiceRequestNbrOfRetries=5
        - -S
        - Autosave=1
        - -S
        - AutosaveInterval=5
        - -S
        - JWKSServiceUrl=$(KEYS_URI)/v1/keys/qlik.api.internal
        - -S
        - ValidateJsonWebTokens=2
        - -S
        - EnableRenewUserToken=1
        - -S
        - InternalTokenServiceUrl=$(TOKEN_AUTH_URI)/v1
        - -S
        - JWTSignPrivateKeyId=$(TOKEN_AUTH_PRIVATE_KEY_ID)
        - -S
        - JWTSignPrivateKeyPath=/etc/secrets/jwtPrivateKey
        - -S
        - EnableABAC=1
        - -S
        - EnableAccessControlTrace=1
        - -S
        - EnableFilePolling=1
        - -S
        - Gen3=1
        - -S
        - PersistenceMode=2
        - -S
        - SystemRules=/etc/config/rules.yaml
        - -S
        - ConnectivityServiceUrl=$(QIX_DATA_CONNECTION_URI)
        - -S
        - ConnectorGetDataRetryCount=3
        - -S
        - ConnectorGetDataRetryIntervalInSeconds=10
        - -S
        - DataConnectorServiceUrl=$(DCAAS_URI)
        - -S
        - EnableDataConnectivityService=1
        - -S
        - EnableGrpcFileStreamConnector=1
        - -S
        - HostedFileRetryCount=3
        - -S
        - HostedFileRetryIntervalInSeconds=10
        - -S
        - SSEPlugin=GeoOperations,$(GEO_OPERATIONS_URI)
        - -S
        - LicenseCacheTimeoutSeconds=3600
        - -S
        - LicenseServiceUrl=$(LICENSES_URI)
        - -S
        - EnableSpaces=1
        - -S
        - SpacesServiceUrl=$(SPACES_URI)
        - -S
        - EnableEncryptData=1
        - -S
        - EncryptionServiceUrl=$(ENCRYPTION_URI)
        - -S
        - UseEncryptionService=1
        - -S
        - EnableFeatureFlagService=1
        - -S
        - FeatureFlagServiceUrl=$(FEATURE_FLAGS_URI)
        - -S
        - EnableGroupsService=1
        - -S
        - GroupsServiceUrl=$(GROUPS_URI)
        - -S
        - EnableAppExport=1
        - -S
        - EnableDownloadFromTCS=1
        - -S
        - EnableResumableUpload=1
        - -S
        - EnableTempContentService=1
        - -S
        - TempContentServiceUrl=$(TEMPORARY_CONTENTS_URI)
        - -S
        - STANCluster=$(NATS_STREAMING_CLUSTER_ID)
        - -S
        - STANMaxReconnect=60
        - -S
        - STANReconnectWait=2
        - -S
        - STANTimeout=10
        - -S
        - STANUrl=$(NATS_URI)
        - -S
        - STANUseToken=1
        - -S
        - UseEventBus=1
        - -S
        - UseSTAN=1
        - -S
        - PersistUserState=1
        - -S
        - PersistedUserStateTTLSeconds=1800
        - -S
        - RedisConnectTimeoutMs=100
        - -S
        - RedisHost=$(PREFIX)-engine-redis-user-state
        - -S
        - RedisPasswordFile=/etc/secrets/redisUserStatePassword
        - -S
        - RedisPort=6379
        - -S
        - RedisSentinelConnectTimeoutMs=100
        - -S
        - RedisSentinelMasterSet=engine-redis-user-state
        - -S
        - RedisSentinelPasswordFile=/etc/secrets/redisUserStateSentinelPassword
        - -S
        - RedisSentinelPort=26379
        - -S
        - RedisSentinelRetryIntervalMs=100
        - -S
        - RedisSentinelSocketTimeoutMs=100
        - -S
        - RedisSocketTimeoutMs=100
        - -S
        - UseRedis=1
        - -S
        - UseRedisSentinel=1
        - -S
        - EnvironmentName="example"
        - -S
        - RegionName="example"
        - -S
        - SessionTimeoutSec=1200
        - -S
        - BasicQlikviewEnabled=1
        - -S
        - BundledContentsRootFolder=/usr/local/share/Bundled
        - -S
        - SkiaFontPaths=/usr/share/fonts
        env:
        - name: ACCEPT_EULA
          valueFrom:
            configMapKeyRef:
              key: acceptEULA
              name: engine-configs
        - name: KEYS_URI
          valueFrom:
            configMapKeyRef:
              key: keysUri
              name: engine-configs
        - name: TOKEN_AUTH_PRIVATE_KEY_ID
          valueFrom:
            secretKeyRef:
              key: tokenAuthPrivateKeyId
              name: engine-secrets
        - name: TOKEN_AUTH_URI
          valueFrom:
            configMapKeyRef:
              key: tokenAuthUri
              name: engine-configs
        - name: LICENSES_URI
          valueFrom:
            configMapKeyRef:
              key: licensesUri
              name: engine-configs
        - name: SPACES_URI
          valueFrom:
            configMapKeyRef:
              key: spacesUri
              name: engine-configs
        - name: FEATURE_FLAGS_URI
          valueFrom:
            configMapKeyRef:
              key: featureFlagsUri
              name: engine-configs
        - name: GROUPS_URI
          valueFrom:
            configMapKeyRef:
              key: groupsUri
              name: engine-configs
        - name: TEMPORARY_CONTENTS_URI
          valueFrom:
            configMapKeyRef:
              key: temporaryContentsUri
              name: engine-configs
        - name: NATS_URI
          valueFrom:
            configMapKeyRef:
              key: natsUri
              name: engine-configs
        - name: NATS_STREAMING_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: natsStreamingClusterId
              name: engine-configs
        - name: ENCRYPTION_URI
          valueFrom:
            configMapKeyRef:
              key: encryptionUri
              name: engine-configs
        - name: DCAAS_URI
          valueFrom:
            configMapKeyRef:
              key: dcaasUri
              name: engine-configs
        - name: QIX_DATA_CONNECTION_URI
          valueFrom:
            configMapKeyRef:
              key: qixDataConnectionUri
              name: engine-configs
        - name: GEO_OPERATIONS_URI
          valueFrom:
            configMapKeyRef:
              key: geoOperationsUri
              name: engine-configs
        - name: PROMETHEUS_PORT
          value: "9090"
        - name: GRPC_DNS_RESOLVER
          value: native
        image: qliktech-docker.jfrog.io/engine-qv:12.665.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 9076
          timeoutSeconds: 10
        name: main
        ports:
        - containerPort: 9076
        - containerPort: 9090
          name: metrics
        readinessProbe:
          httpGet:
            path: /health
            port: 9076
        resources: {}
        volumeMounts:
        - mountPath: /qlik/apps
          name: apps-storage
        - mountPath: /etc/secrets
          name: secrets
          readOnly: true
        - mountPath: /etc/config
          name: rules-volume
        - mountPath: /home/engine/Qlik/Sense
          name: storagepath
        - mountPath: /tmp
          name: tmpdir
      dnsConfig:
        options:
        - name: timeout
          value: "1"
        - name: single-request-reopen
      imagePullSecrets:
      - name: artifactory-docker-secret
      terminationGracePeriodSeconds: 30
      volumes:
      - name: apps-storage
        persistentVolumeClaim:
          claimName: engine
      - name: secrets
        secret:
          items:
          - key: tokenAuthPrivateKey
            path: jwtPrivateKey
          secretName: engine-secrets
      - configMap:
          defaultMode: 493
          name: engine-prestop-hook
          optional: true
        name: engine-prestop-hook
      - configMap:
          name: engine-engine-rules-cm
        name: rules-volume
      - emptyDir: {}
        name: storagepath
      - emptyDir: {}
        name: tmpdir
---
