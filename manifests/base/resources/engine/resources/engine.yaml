apiVersion: qixmanager.qlik.com/v1
kind: Engine
metadata:
  labels:
    app: engine
    chart: engine-1.66.39
    heritage: Helm
    release: engine
  name: engine-reload
spec:
  metadata:
    annotations:
      prometheus.io/job: engine-reload
      prometheus.io/port: "9090"
      prometheus.io/scrape: "true"
    labels:
      metricsPort: "9090"
      qix-engine: qix-engine
      qix-engine-version: 12.665.0
      qlik.com/dynamic: "true"
      qlik.com/engine-type: qliksense
      qlik.com/workload-type: reload
      servicePort: "9076"
  podSpec:
    containers:
    - args:
      - -S
      - AcceptEULA=$(ACCEPT_EULA)
      - -S
      - DocumentDirectory=/qlik/apps
      - -S
      - EnableRestartOnSessionStall=1
      - -S
      - PrometheusServicePort=9090
      - -S
      - DesktopPort=9076
      - -S
      - EnableNumericalAbbreviation=0
      - -S
      - HttpTrafficLogVerbosity=4
      - -S
      - TrafficLogVerbosity=0
      - -S
      - SystemLogVerbosity=4
      - -S
      - AuditLogVerbosity=0
      - -S
      - PerformanceLogVerbosity=0
      - -S
      - QixPerformanceLogVerbosity=0
      - -S
      - SessionLogVerbosity=4
      - -S
      - ScriptLogVerbosity=4
      - -S
      - SmartSearchQueryLogVerbosity=3
      - -S
      - SmartSearchIndexLogVerbosity=3
      - -S
      - SSEVerbosity=4
      - -S
      - EventBusLogVerbosity=4
      - -S
      - EnableExtServiceLogs=1
      - -S
      - ExternalServicesLogVerbosity=4
      - -S
      - BasePathPrefix=/api
      - -S
      - FolderConnectionInterface=0
      - -S
      - RestServiceRequestNbrOfRetries=5
      - -S
      - Autosave=1
      - -S
      - AutosaveInterval=5
      - -S
      - ValidateJsonWebTokens=2
      - -S
      - JWKSServiceUrl=$(KEYS_URI)/v1/keys/qlik.api.internal
      - -S
      - JWTSignPrivateKeyPath=/etc/secrets/jwtPrivateKey
      - -S
      - JWTSignPrivateKeyId=$(TOKEN_AUTH_PRIVATE_KEY_ID)
      - -S
      - InternalTokenServiceUrl=$(TOKEN_AUTH_URI)/v1
      - -S
      - EnableRenewUserToken=1
      - -S
      - EnableABAC=1
      - -S
      - Gen3=1
      - -S
      - PersistenceMode=2
      - -S
      - EnableAccessControlTrace=1
      - -S
      - SystemRules=/etc/config/rules.yaml
      - -S
      - EnableDataConnectivityService=1
      - -S
      - EnableGrpcFileStreamConnector=1
      - -S
      - DataConnectorServiceUrl=$(DCAAS_URI)
      - -S
      - ConnectivityServiceUrl=$(QIX_DATA_CONNECTION_URI)
      - -S
      - ConnectorGetDataRetryCount=3
      - -S
      - ConnectorGetDataRetryIntervalInSeconds=10
      - -S
      - HostedFileRetryCount=3
      - -S
      - HostedFileRetryIntervalInSeconds=10
      - -S
      - SSEPlugin=GeoOperations,$(GEO_OPERATIONS_URI)
      - -S
      - LicenseServiceUrl=$(LICENSES_URI)
      - -S
      - LicenseCacheTimeoutSeconds=3600
      - -S
      - EnableSpaces=1
      - -S
      - SpacesServiceUrl=$(SPACES_URI)
      - -S
      - EnableEncryptData=1
      - -S
      - UseEncryptionService=1
      - -S
      - EncryptionServiceUrl=$(ENCRYPTION_URI)
      - -S
      - EnableFeatureFlagService=1
      - -S
      - FeatureFlagServiceUrl=$(FEATURE_FLAGS_URI)
      - -S
      - EnableGroupsService=1
      - -S
      - GroupsServiceUrl=$(GROUPS_URI)
      - -S
      - EnableAppExport=1
      - -S
      - EnableTempContentService=1
      - -S
      - TempContentServiceUrl=$(TEMPORARY_CONTENTS_URI)
      - -S
      - EnableResumableUpload=1
      - -S
      - EnableDownloadFromTCS=1
      - -S
      - UseSTAN=1
      - -S
      - STANUrl=$(NATS_URI)
      - -S
      - STANCluster=$(NATS_STREAMING_CLUSTER_ID)
      - -S
      - STANUseToken=1
      - -S
      - STANMaxReconnect=60
      - -S
      - STANReconnectWait=2
      - -S
      - STANTimeout=10
      - -S
      - UseEventBus=1
      - -S
      - EnvironmentName="example"
      - -S
      - RegionName="example"
      - -S
      - ShutdownWait=1
      env:
      - name: PROMETHEUS_PORT
        value: "9090"
      - name: GRPC_DNS_RESOLVER
        value: native
      - name: ACCEPT_EULA
        valueFrom:
          configMapKeyRef:
            key: acceptEULA
            name: engine-configs
      - name: KEYS_URI
        valueFrom:
          configMapKeyRef:
            key: keysUri
            name: engine-configs
      - name: TOKEN_AUTH_PRIVATE_KEY_ID
        valueFrom:
          secretKeyRef:
            key: tokenAuthPrivateKeyId
            name: engine-secrets
      - name: TOKEN_AUTH_URI
        valueFrom:
          configMapKeyRef:
            key: tokenAuthUri
            name: engine-configs
      - name: LICENSES_URI
        valueFrom:
          configMapKeyRef:
            key: licensesUri
            name: engine-configs
      - name: SPACES_URI
        valueFrom:
          configMapKeyRef:
            key: spacesUri
            name: engine-configs
      - name: FEATURE_FLAGS_URI
        valueFrom:
          configMapKeyRef:
            key: featureFlagsUri
            name: engine-configs
      - name: GROUPS_URI
        valueFrom:
          configMapKeyRef:
            key: groupsUri
            name: engine-configs
      - name: TEMPORARY_CONTENTS_URI
        valueFrom:
          configMapKeyRef:
            key: temporaryContentsUri
            name: engine-configs
      - name: NATS_URI
        valueFrom:
          configMapKeyRef:
            key: natsUri
            name: engine-configs
      - name: NATS_STREAMING_CLUSTER_ID
        valueFrom:
          configMapKeyRef:
            key: natsStreamingClusterId
            name: engine-configs
      - name: ENCRYPTION_URI
        valueFrom:
          configMapKeyRef:
            key: encryptionUri
            name: engine-configs
      - name: DCAAS_URI
        valueFrom:
          configMapKeyRef:
            key: dcaasUri
            name: engine-configs
      - name: QIX_DATA_CONNECTION_URI
        valueFrom:
          configMapKeyRef:
            key: qixDataConnectionUri
            name: engine-configs
      - name: GEO_OPERATIONS_URI
        valueFrom:
          configMapKeyRef:
            key: geoOperationsUri
            name: engine-configs
      image: qlik-docker-qsefe.bintray.io/engine:12.665.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        httpGet:
          path: /health
          port: 9076
      name: engine-reload
      ports:
      - containerPort: 9076
      - containerPort: 9090
        name: metrics
      readinessProbe:
        httpGet:
          path: /health
          port: 9076
      volumeMounts:
      - mountPath: /qlik/apps
        name: apps-storage
      - mountPath: /etc/secrets
        name: secrets
        readOnly: true
      - mountPath: /etc/config
        name: rules-volume
      - mountPath: /home/engine/Qlik/Sense
        name: storagepath
    dnsConfig:
      options:
      - name: timeout
        value: "1"
      - name: single-request-reopen
    imagePullSecrets:
    - name: artifactory-docker-secret
    terminationGracePeriodSeconds: 30
    volumes:
    - name: apps-storage
      persistentVolumeClaim:
        claimName: engine
    - name: secrets
      secret:
        items:
        - key: tokenAuthPrivateKey
          path: jwtPrivateKey
        secretName: engine-secrets
    - configMap:
        defaultMode: 493
        name: engine-prestop-hook
        optional: true
      name: engine-prestop-hook
    - configMap:
        name: engine-engine-rules-cm
      name: rules-volume
    - emptyDir: {}
      name: storagepath
  workloadType: reload
---
