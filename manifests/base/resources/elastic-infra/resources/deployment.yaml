apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: nginx-ingress
    app.kubernetes.io/component: controller
    chart: nginx-ingress-1.36.2
    heritage: Helm
    release: elastic-infra
  name: elastic-infra-nginx-ingress-controller
spec:
  minReadySeconds: 0
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx-ingress
      release: elastic-infra
  strategy: {}
  template:
    metadata:
      labels:
        app: nginx-ingress
        app.kubernetes.io/component: controller
        component: controller
        release: elastic-infra
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --election-id=ingress-controller-leader
        - --ingress-class=$(INGRESS_CLASS)
        - --watch-namespace=$(NAMESPACE)
        - --update-status=false
        - --configmap=$(NAMESPACE)/$(PREFIX)-elastic-infra-nginx-ingress-controller
        - --default-ssl-certificate=$(NAMESPACE)/$(TLS_SECRET_RESOURCE)
        - --metrics-per-host=false
        env:
        - name: TLS_SECRET_RESOURCE
          value: elastic-infra-elastic-infra-tls-secret
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: qliktech-docker.jfrog.io/nginx-ingress-controller:2.0.0
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: main
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 10254
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
      dnsPolicy: ClusterFirst
      hostNetwork: false
      imagePullSecrets:
      - name: artifactory-docker-secret
      serviceAccountName: elastic-infra-nginx-ingress
      terminationGracePeriodSeconds: 300
---
